/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlanningIndexRouteImport } from './routes/planning/index'
import { Route as PlanningCampaignIndexRouteImport } from './routes/planning/campaign/index'
import { Route as PlanningCampaignIdRouteImport } from './routes/planning/campaign/$id'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlanningIndexRoute = PlanningIndexRouteImport.update({
  id: '/planning/',
  path: '/planning/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlanningCampaignIndexRoute = PlanningCampaignIndexRouteImport.update({
  id: '/planning/campaign/',
  path: '/planning/campaign/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlanningCampaignIdRoute = PlanningCampaignIdRouteImport.update({
  id: '/planning/campaign/$id',
  path: '/planning/campaign/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/planning': typeof PlanningIndexRoute
  '/planning/campaign/$id': typeof PlanningCampaignIdRoute
  '/planning/campaign': typeof PlanningCampaignIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/planning': typeof PlanningIndexRoute
  '/planning/campaign/$id': typeof PlanningCampaignIdRoute
  '/planning/campaign': typeof PlanningCampaignIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/planning/': typeof PlanningIndexRoute
  '/planning/campaign/$id': typeof PlanningCampaignIdRoute
  '/planning/campaign/': typeof PlanningCampaignIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/planning'
    | '/planning/campaign/$id'
    | '/planning/campaign'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/planning'
    | '/planning/campaign/$id'
    | '/planning/campaign'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/planning/'
    | '/planning/campaign/$id'
    | '/planning/campaign/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PlanningIndexRoute: typeof PlanningIndexRoute
  PlanningCampaignIdRoute: typeof PlanningCampaignIdRoute
  PlanningCampaignIndexRoute: typeof PlanningCampaignIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/planning/': {
      id: '/planning/'
      path: '/planning'
      fullPath: '/planning'
      preLoaderRoute: typeof PlanningIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/planning/campaign/': {
      id: '/planning/campaign/'
      path: '/planning/campaign'
      fullPath: '/planning/campaign'
      preLoaderRoute: typeof PlanningCampaignIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/planning/campaign/$id': {
      id: '/planning/campaign/$id'
      path: '/planning/campaign/$id'
      fullPath: '/planning/campaign/$id'
      preLoaderRoute: typeof PlanningCampaignIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  PlanningIndexRoute: PlanningIndexRoute,
  PlanningCampaignIdRoute: PlanningCampaignIdRoute,
  PlanningCampaignIndexRoute: PlanningCampaignIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
